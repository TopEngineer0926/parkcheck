{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _picker = require(\"@react-native-community/picker\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _reactNativeLinearGradient = _interopRequireDefault(require(\"react-native-linear-gradient\"));\n\nvar _reactNativeI18nLocalize = require(\"react-native-i18n-localize\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _logo = _interopRequireDefault(require(\"../assets/images/logo.png\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar _reactNativeIndicator = require(\"react-native-indicator\");\n\nvar _reactNativeModalOverlay = _interopRequireDefault(require(\"react-native-modal-overlay\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _fetch = require(\"../fetch\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\src\\\\screens\\\\LogIn.js\";\n\nvar LogIn = function LogIn(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = (0, _react.useState)(\"de\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      language = _useState2[0],\n      selectLang = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      username = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(\"\"),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      password = _useState6[0],\n      setPassWord = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      remember = _useState8[0],\n      setRemember = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(\"de\"),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      selectedValue = _useState10[0],\n      setSelectedValue = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      modalOpen = _useState14[0],\n      setModalOpen = _useState14[1];\n\n  var isMountedRef = (0, _react.useRef)(null);\n\n  var _useState15 = (0, _react.useState)(null),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n      accountList = _useState16[0],\n      setAccountList = _useState16[1];\n\n  var setSelectedAccount = function setSelectedAccount(index) {\n    var info = accountList[index];\n    setUserName(info.username);\n    setPassWord(info.password);\n  };\n\n  var accountListView = isMountedRef.current && accountList && accountList.map(function (item, index) {\n    return _react.default.createElement(_reactNative.View, {\n      key: index,\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNative.TouchableOpacity, {\n      activeOpacity: .5,\n      style: {\n        padding: 10,\n        width: '85%'\n      },\n      onPress: function onPress() {\n        setModalOpen(false);\n        setSelectedAccount(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: {\n        fontSize: 22,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, item.username)), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return trashAccount(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_FontAwesome.default, {\n      name: \"trash\",\n      size: 22,\n      color: \"#126FEA\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    })));\n  });\n\n  var setTick = function setTick() {\n    if (remember == true) {\n      setRemember(false);\n    } else {\n      setRemember(true);\n    }\n  };\n\n  var changeLanguage = function changeLanguage(lang) {\n    selectLang(lang);\n\n    _reactNativeI18nLocalize.I18nLocalize.setLanguage(lang);\n\n    storeInitLangData(lang);\n  };\n\n  var failedConnect = function failedConnect() {\n    setLoading(false);\n\n    _reactNative.Alert.alert(_reactNativeI18nLocalize.i18n.t('warn'), _reactNativeI18nLocalize.i18n.t('not_connect_server'), [{\n      text: _reactNativeI18nLocalize.i18n.t('ok')\n    }]);\n  };\n\n  var handleLogin = function handleLogin(data) {\n    setLoading(false);\n\n    if (data.pass == \"getin\") {\n      if (remember) {\n        storeInitLoginData(username, password);\n      }\n\n      setTimeout(function () {\n        navigation.replace('UserInfo', {\n          headerTitle: _reactNativeI18nLocalize.i18n.t('welcome') + ' ' + username,\n          customerID: data.customerID,\n          clerk: data.clerk\n        });\n      }, 500);\n    } else if (data.pass == \"invalid\") {\n      _reactNative.Alert.alert(_reactNativeI18nLocalize.i18n.t('warn'), _reactNativeI18nLocalize.i18n.t('wrong_user'), [{\n        text: _reactNativeI18nLocalize.i18n.t('ok')\n      }]);\n    }\n  };\n\n  var pressLogIn = function pressLogIn() {\n    var formData = new FormData();\n    formData.append('userId', username);\n    formData.append('passWord', password);\n    setLoading(true);\n    (0, _fetch.MyFetch)(25, fetch('http://150.95.129.109/wp-json/violation/login', {\n      method: 'POST',\n      body: formData\n    })).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      handleLogin(json);\n    }).catch(function (error) {\n      console.log(error);\n      failedConnect();\n    });\n  };\n\n  var storeInitLangData = function storeInitLangData(lang) {\n    return _regenerator.default.async(function storeInitLangData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem('initialLang', lang));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getInitLangData = function getInitLangData() {\n    var value;\n    return _regenerator.default.async(function getInitLangData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('initialLang'));\n\n          case 3:\n            value = _context2.sent;\n\n            if (value !== null && isMountedRef.current) {\n              selectLang(value);\n              setSelectedValue(value);\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getInitLoginData = function getInitLoginData() {\n    var acc_arr, info;\n    return _regenerator.default.async(function getInitLoginData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('accountList'));\n\n          case 3:\n            acc_arr = _context3.sent;\n\n            if (acc_arr !== null && isMountedRef.current) {\n              setAccountList(JSON.parse(acc_arr));\n              info = JSON.parse(acc_arr);\n              setUserName(info[0].username);\n              setPassWord(info[0].password);\n            }\n\n            _context3.next = 9;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var storeInitLoginData = function storeInitLoginData(user_id, user_pass) {\n    var temp, exist;\n    return _regenerator.default.async(function storeInitLoginData$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            temp = accountList;\n            exist = false;\n\n            if (temp) {\n              temp.map(function (item, index) {\n                if (item.username == user_id) exist = true;\n              });\n            }\n\n            if (!exist) {\n              if (temp) temp = [].concat((0, _toConsumableArray2.default)(temp), [{\n                username: user_id,\n                password: user_pass\n              }]);else temp = [{\n                username: user_id,\n                password: user_pass\n              }];\n            }\n\n            setAccountList(temp);\n            _context4.next = 8;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem('accountList', JSON.stringify(temp)));\n\n          case 8:\n            _context4.next = 12;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var trashAccount = function trashAccount(index) {\n    var temp;\n    return _regenerator.default.async(function trashAccount$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            temp = accountList;\n            temp.splice(index, 1);\n            setAccountList(temp);\n            setModalOpen(false);\n            storeAccounts(temp);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var storeAccounts = function storeAccounts(temp) {\n    return _regenerator.default.async(function storeAccounts$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem('accountList', JSON.stringify(temp)));\n\n          case 3:\n            _context6.next = 7;\n            break;\n\n          case 5:\n            _context6.prev = 5;\n            _context6.t0 = _context6[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    isMountedRef.current = true;\n    getInitLangData();\n    getInitLoginData();\n    return function () {\n      return isMountedRef.current = false;\n    };\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_picker.Picker, {\n    selectedValue: selectedValue,\n    style: styles.flags,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setSelectedValue(itemValue);\n      changeLanguage(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_picker.Picker.Item, {\n    label: \"\\uD83C\\uDDE9\\uD83C\\uDDEA  Deutsch\",\n    value: \"de\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_picker.Picker.Item, {\n    label: \"\\uD83C\\uDDEC\\uD83C\\uDDE7  English\",\n    value: \"en\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_picker.Picker.Item, {\n    label: \"\\uD83C\\uDDEB\\uD83C\\uDDF7  Fran\\xE7ais\",\n    value: \"fr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_picker.Picker.Item, {\n    label: \"\\uD83C\\uDDEE\\uD83C\\uDDF9  Italiano\",\n    value: \"it\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.contain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.logo,\n    source: _logo.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.itemInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: .5,\n    onPress: function onPress() {\n      if (accountList && accountList.length > 0) setModalOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_FontAwesome.default, {\n    name: \"user\",\n    size: 23,\n    color: \"#126FEA\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setUserName(text);\n    },\n    autoCapitalize: \"none\",\n    value: username,\n    placeholder: _reactNativeI18nLocalize.i18n.t('user_name'),\n    style: {\n      width: '90%',\n      fontSize: 20,\n      paddingLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.itemInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_FontAwesome.default, {\n    name: \"lock\",\n    size: 23,\n    color: \"#126FEA\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setPassWord(text);\n    },\n    autoCapitalize: \"none\",\n    value: password,\n    secureTextEntry: true,\n    placeholder: _reactNativeI18nLocalize.i18n.t('password'),\n    style: {\n      width: '90%',\n      fontSize: 20,\n      paddingLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNativeElements.CheckBox, {\n    title: _reactNativeI18nLocalize.i18n.t('remember_me'),\n    iconType: \"font-awesome\",\n    checkedIcon: \"check\",\n    checked: remember,\n    onIconPress: setTick,\n    textStyle: {\n      fontSize: 18\n    },\n    containerStyle: {\n      alignSelf: \"flex-start\",\n      paddingLeft: 0,\n      backgroundColor: \"white\",\n      borderColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.loginbutton,\n    activeOpacity: .5,\n    onPress: pressLogIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeLinearGradient.default, {\n    start: {\n      x: 0,\n      y: 0.75\n    },\n    end: {\n      x: 1,\n      y: 0.25\n    },\n    colors: ['#2974FA', '#2974FA', '#2974FA'],\n    style: styles.gradient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, _reactNativeI18nLocalize.i18n.t('sign_in'))))), loading && _react.default.createElement(_reactNative.View, {\n    style: styles.loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeIndicator.BubblesLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  })), accountList && accountList.length > 0 && _react.default.createElement(_reactNativeModalOverlay.default, {\n    visible: modalOpen,\n    onClose: function onClose() {\n      return setModalOpen(false);\n    },\n    closeOnTouchOutside: true,\n    animationType: \"fadeIn\",\n    containerStyle: {\n      backgroundColor: 'rgba(27, 27, 27, 0.78)'\n    },\n    childrenWrapperStyle: {\n      backgroundColor: '#eee',\n      borderRadius: 10,\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    animationDuration: 500,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeGestureHandler.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_FontAwesome.default, {\n    name: \"user-circle\",\n    size: 22,\n    color: \"#126FEA\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 22,\n      paddingLeft: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, _reactNativeI18nLocalize.i18n.t('choose_account'))), accountListView)));\n};\n\nvar _default = LogIn;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  main: {\n    flex: 1,\n    padding: 30,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    position: 'relative'\n  },\n  contain: {\n    alignItems: 'center'\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 25,\n    textAlign: 'center'\n  },\n  itemInput: {\n    width: '95%',\n    borderBottomColor: 'grey',\n    borderBottomWidth: 0.6,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 5,\n    marginBottom: 10\n  },\n  loginbutton: {\n    width: '90%',\n    height: 50,\n    marginTop: 45\n  },\n  qrbutton: {\n    width: '90%',\n    height: 50,\n    marginTop: 25\n  },\n  gradient: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    height: '100%'\n  },\n  text: {\n    color: 'white',\n    fontSize: 23\n  },\n  logo: {\n    resizeMode: 'contain',\n    width: 100,\n    height: 100,\n    marginBottom: 70\n  },\n  loginText: {\n    fontSize: 30,\n    textAlign: 'left',\n    marginBottom: 50\n  },\n  flags: {\n    height: 50,\n    width: 160,\n    position: \"absolute\",\n    top: 0,\n    right: -40,\n    backgroundColor: 'white'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(97, 97, 97, 0.2)'\n  }\n});","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/src/screens/LogIn.js"],"names":["LogIn","navigation","route","language","selectLang","username","setUserName","password","setPassWord","remember","setRemember","selectedValue","setSelectedValue","loading","setLoading","modalOpen","setModalOpen","isMountedRef","accountList","setAccountList","setSelectedAccount","index","info","accountListView","current","map","item","display","flexDirection","alignItems","width","padding","fontSize","textAlign","trashAccount","setTick","changeLanguage","lang","I18nLocalize","setLanguage","storeInitLangData","failedConnect","Alert","alert","i18n","t","text","handleLogin","data","pass","storeInitLoginData","setTimeout","replace","headerTitle","customerID","clerk","pressLogIn","formData","FormData","append","fetch","method","body","then","response","json","catch","error","console","log","AsyncStorage","setItem","getInitLangData","getItem","value","getInitLoginData","acc_arr","JSON","parse","user_id","user_pass","temp","exist","stringify","splice","storeAccounts","styles","main","flags","itemValue","itemIndex","contain","logo","img","itemInput","length","paddingLeft","alignSelf","backgroundColor","borderColor","loginbutton","x","y","gradient","borderRadius","paddingRight","justifyContent","marginBottom","StyleSheet","create","flex","position","title","borderBottomColor","borderBottomWidth","height","marginTop","qrbutton","color","resizeMode","loginText","top","right","left","bottom"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AASA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAER,qBAAS,IAAT,CAFQ;AAAA;AAAA,MAEhCC,QAFgC;AAAA,MAEtBC,UAFsB;;AAAA,mBAGP,qBAAS,EAAT,CAHO;AAAA;AAAA,MAGhCC,QAHgC;AAAA,MAGtBC,WAHsB;;AAAA,mBAIP,qBAAS,EAAT,CAJO;AAAA;AAAA,MAIhCC,QAJgC;AAAA,MAItBC,WAJsB;;AAAA,mBAKP,sBALO;AAAA;AAAA,MAKhCC,QALgC;AAAA,MAKtBC,WALsB;;AAAA,mBAMG,qBAAS,IAAT,CANH;AAAA;AAAA,MAMhCC,aANgC;AAAA,MAMjBC,gBANiB;;AAAA,oBAOT,qBAAS,KAAT,CAPS;AAAA;AAAA,MAOhCC,OAPgC;AAAA,MAOvBC,UAPuB;;AAAA,oBAQL,qBAAS,KAAT,CARK;AAAA;AAAA,MAQhCC,SARgC;AAAA,MAQrBC,YARqB;;AAUvC,MAAMC,YAAY,GAAG,mBAAO,IAAP,CAArB;;AAVuC,oBAcD,qBAAS,IAAT,CAdC;AAAA;AAAA,MAchCC,WAdgC;AAAA,MAcnBC,cAdmB;;AAgBvC,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,QAAIC,IAAI,GAAGJ,WAAW,CAACG,KAAD,CAAtB;AACAf,IAAAA,WAAW,CAACgB,IAAI,CAACjB,QAAN,CAAX;AACAG,IAAAA,WAAW,CAACc,IAAI,CAACf,QAAN,CAAX;AACD,GAJD;;AAMA,MAAMgB,eAAe,GAAGN,YAAY,CAACO,OAAb,IAAwBN,WAAxB,IAAuCA,WAAW,CAACO,GAAZ,CAAgB,UAACC,IAAD,EAAOL,KAAP;AAAA,WAC7E,6BAAC,iBAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,KAAK,EAAE;AACvBM,QAAAA,OAAO,EAAE,MADc;AAEvBC,QAAAA,aAAa,EAAE,KAFQ;AAGvBC,QAAAA,UAAU,EAAE,QAHW;AAIvBC,QAAAA,KAAK,EAAE;AAJgB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,6BAAC,6BAAD;AACE,MAAA,aAAa,EAAE,EADjB;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeD,QAAAA,KAAK,EAAE;AAAtB,OAFT;AAGE,MAAA,OAAO,EAAE,mBAAM;AACbd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,QAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAE;AAAEW,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDP,IAAI,CAACrB,QAA1D,CARF,CANF,EAgBE,6BAAC,6BAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAM6B,YAAY,CAACb,KAAD,CAAlB;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,oBAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,CAD6E;AAAA,GAAhB,CAA/D;;AAuBA,MAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAI1B,QAAQ,IAAI,IAAhB,EAAsB;AACpBC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAGK;AACHA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAPD;;AASA,MAAM0B,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/BjC,IAAAA,UAAU,CAACiC,IAAD,CAAV;;AACAC,0CAAaC,WAAb,CAAyBF,IAAzB;;AACAG,IAAAA,iBAAiB,CAACH,IAAD,CAAjB;AACD,GAJD;;AAMA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B3B,IAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA4B,uBAAMC,KAAN,CACEC,8BAAKC,CAAL,CAAO,MAAP,CADF,EAEED,8BAAKC,CAAL,CAAO,oBAAP,CAFF,EAGE,CAAC;AAAEC,MAAAA,IAAI,EAAEF,8BAAKC,CAAL,CAAO,IAAP;AAAR,KAAD,CAHF;AAKD,GARD;;AAUA,MAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC5BlC,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,QAAIkC,IAAI,CAACC,IAAL,IAAa,OAAjB,EAA0B;AACxB,UAAIxC,QAAJ,EAAc;AACZyC,QAAAA,kBAAkB,CAAC7C,QAAD,EAAWE,QAAX,CAAlB;AACD;;AAED4C,MAAAA,UAAU,CAAC,YAAM;AACflD,QAAAA,UAAU,CAACmD,OAAX,CAAmB,UAAnB,EAA+B;AAE7BC,UAAAA,WAAW,EAAET,8BAAKC,CAAL,CAAO,SAAP,IAAoB,GAApB,GAA0BxC,QAFV;AAG7BiD,UAAAA,UAAU,EAAEN,IAAI,CAACM,UAHY;AAI7BC,UAAAA,KAAK,EAAEP,IAAI,CAACO;AAJiB,SAA/B;AAMD,OAPS,EAOP,GAPO,CAAV;AASD,KAdD,MAeK,IAAIP,IAAI,CAACC,IAAL,IAAa,SAAjB,EAA4B;AAC/BP,yBAAMC,KAAN,CACEC,8BAAKC,CAAL,CAAO,MAAP,CADF,EAEED,8BAAKC,CAAL,CAAO,YAAP,CAFF,EAGE,CAAC;AAAEC,QAAAA,IAAI,EAAEF,8BAAKC,CAAL,CAAO,IAAP;AAAR,OAAD,CAHF;AAKD;AACF,GAxBD;;AA0BA,MAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BtD,QAA1B;AACAoD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BpD,QAA5B;AAEAO,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,wBAAQ,EAAR,EAAY8C,KAAK,CAAC,+CAAD,EAAkD;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEL;AAF2D,KAAlD,CAAjB,EAIGM,IAJH,CAIQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAJR,EAKGF,IALH,CAKQ,UAACE,IAAD,EAAU;AAAElB,MAAAA,WAAW,CAACkB,IAAD,CAAX;AAAoB,KALxC,EAMGC,KANH,CAMS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA1B,MAAAA,aAAa;AACd,KATH;AAWD,GApBD;;AAsBA,MAAMD,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOH,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEhBiC,sBAAaC,OAAb,CAAqB,aAArB,EAAoClC,IAApC,CAFgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAQA,MAAMmC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEAF,sBAAaG,OAAb,CAAqB,aAArB,CAFA;;AAAA;AAEdC,YAAAA,KAFc;;AAGpB,gBAAIA,KAAK,KAAK,IAAV,IAAkBzD,YAAY,CAACO,OAAnC,EAA4C;AAC1CpB,cAAAA,UAAU,CAACsE,KAAD,CAAV;AACA9D,cAAAA,gBAAgB,CAAC8D,KAAD,CAAhB;AACD;;AANmB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAYA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAGCL,sBAAaG,OAAb,CAAqB,aAArB,CAHD;;AAAA;AAGfG,YAAAA,OAHe;;AAKrB,gBAAIA,OAAO,KAAK,IAAZ,IAAoB3D,YAAY,CAACO,OAArC,EAA8C;AAC5CL,cAAAA,cAAc,CAAC0D,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAD,CAAd;AACItD,cAAAA,IAFwC,GAEjCuD,IAAI,CAACC,KAAL,CAAWF,OAAX,CAFiC;AAG5CtE,cAAAA,WAAW,CAACgB,IAAI,CAAC,CAAD,CAAJ,CAAQjB,QAAT,CAAX;AACAG,cAAAA,WAAW,CAACc,IAAI,CAAC,CAAD,CAAJ,CAAQf,QAAT,CAAX;AACD;;AAVoB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAeA,MAAM2C,kBAAkB,GAAG,SAArBA,kBAAqB,CAAO6B,OAAP,EAAgBC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnBC,YAAAA,IAHmB,GAGZ/D,WAHY;AAInBgE,YAAAA,KAJmB,GAIX,KAJW;;AAMvB,gBAAID,IAAJ,EAAU;AACRA,cAAAA,IAAI,CAACxD,GAAL,CAAS,UAACC,IAAD,EAAOL,KAAP,EAAiB;AACxB,oBAAIK,IAAI,CAACrB,QAAL,IAAiB0E,OAArB,EACEG,KAAK,GAAG,IAAR;AACH,eAHD;AAID;;AAED,gBAAI,CAACA,KAAL,EAAY;AACV,kBAAID,IAAJ,EACEA,IAAI,8CAAOA,IAAP,IAAa;AACf5E,gBAAAA,QAAQ,EAAE0E,OADK;AAEfxE,gBAAAA,QAAQ,EAAEyE;AAFK,eAAb,EAAJ,CADF,KAMEC,IAAI,GAAG,CAAC;AACN5E,gBAAAA,QAAQ,EAAE0E,OADJ;AAENxE,gBAAAA,QAAQ,EAAEyE;AAFJ,eAAD,CAAP;AAIH;;AAED7D,YAAAA,cAAc,CAAC8D,IAAD,CAAd;AA1BuB;AAAA,8CA4BjBX,sBAAaC,OAAb,CAAqB,aAArB,EAAoCM,IAAI,CAACM,SAAL,CAAeF,IAAf,CAApC,CA5BiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAmCA,MAAM/C,YAAY,GAAG,SAAfA,YAAe,CAAOb,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf4D,YAAAA,IAFe,GAER/D,WAFQ;AAGnB+D,YAAAA,IAAI,CAACG,MAAL,CAAY/D,KAAZ,EAAmB,CAAnB;AACAF,YAAAA,cAAc,CAAC8D,IAAD,CAAd;AACAjE,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACAqE,YAAAA,aAAa,CAACJ,IAAD,CAAb;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAUA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEZX,sBAAaC,OAAb,CAAqB,aAArB,EAAoCM,IAAI,CAACM,SAAL,CAAeF,IAAf,CAApC,CAFY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAMA,wBAAU,YAAM;AACdhE,IAAAA,YAAY,CAACO,OAAb,GAAuB,IAAvB;AAEAgD,IAAAA,eAAe;AACfG,IAAAA,gBAAgB;AAEhB,WAAO;AAAA,aAAM1D,YAAY,CAACO,OAAb,GAAuB,KAA7B;AAAA,KAAP;AAED,GARD,EAQG,EARH;AAWA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE8D,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,cAAD;AACE,IAAA,aAAa,EAAE5E,aADjB;AAEE,IAAA,KAAK,EAAE2E,MAAM,CAACE,KAFhB;AAGE,IAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,SAAZ,EAA0B;AAAE9E,MAAAA,gBAAgB,CAAC6E,SAAD,CAAhB;AAA6BrD,MAAAA,cAAc,CAACqD,SAAD,CAAd;AAA2B,KAHrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,6BAAC,cAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,mCAAnB;AAAmC,IAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,6BAAC,cAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,mCAAnB;AAAmC,IAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,6BAAC,cAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,uCAAnB;AAAoC,IAAA,KAAK,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,6BAAC,cAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,oCAAnB;AAAoC,IAAA,KAAK,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AAAO,IAAA,KAAK,EAAEL,MAAM,CAACM,IAArB;AAA2B,IAAA,MAAM,EAAEC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,6BAAD;AACE,IAAA,aAAa,EAAE,EADjB;AAEE,IAAA,OAAO,EAAE,mBAAM;AAAE,UAAI5E,WAAW,IAAIA,WAAW,CAAC6E,MAAZ,GAAqB,CAAxC,EAA2C/E,YAAY,CAAC,IAAD,CAAZ;AAAoB,KAFlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,6BAAC,oBAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE,6BAAC,sBAAD;AACE,IAAA,YAAY,EAAE,sBAAA8B,IAAI;AAAA,aAAIxC,WAAW,CAACwC,IAAD,CAAf;AAAA,KADpB;AAEE,IAAA,cAAc,EAAC,MAFjB;AAGE,IAAA,KAAK,EAAEzC,QAHT;AAIE,IAAA,WAAW,EAAEuC,8BAAKC,CAAL,CAAO,WAAP,CAJf;AAKE,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAE,KAAT;AAAgBE,MAAAA,QAAQ,EAAE,EAA1B;AAA8BgE,MAAAA,WAAW,EAAE;AAA3C,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAHF,EAkBE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,oBAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,sBAAD;AACE,IAAA,YAAY,EAAE,sBAAAhD,IAAI;AAAA,aAAItC,WAAW,CAACsC,IAAD,CAAf;AAAA,KADpB;AAEE,IAAA,cAAc,EAAC,MAFjB;AAGE,IAAA,KAAK,EAAEvC,QAHT;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,WAAW,EAAEqC,8BAAKC,CAAL,CAAO,UAAP,CALf;AAME,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAE,KAAT;AAAgBE,MAAAA,QAAQ,EAAE,EAA1B;AAA8BgE,MAAAA,WAAW,EAAE;AAA3C,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAlBF,EA8BE,6BAAC,6BAAD;AACE,IAAA,KAAK,EAAEpD,8BAAKC,CAAL,CAAO,aAAP,CADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,OAAO,EAAEpC,QAJX;AAKE,IAAA,WAAW,EAAE0B,OALf;AAME,IAAA,SAAS,EAAE;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KANb;AAOE,IAAA,cAAc,EAAE;AAAEiE,MAAAA,SAAS,EAAE,YAAb;AAA2BD,MAAAA,WAAW,EAAE,CAAxC;AAA2CE,MAAAA,eAAe,EAAE,OAA5D;AAAqEC,MAAAA,WAAW,EAAE;AAAlF,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EAuCE,6BAAC,6BAAD;AACE,IAAA,KAAK,EAAEb,MAAM,CAACc,WADhB;AAEE,IAAA,aAAa,EAAE,EAFjB;AAGE,IAAA,OAAO,EAAE5C,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,6BAAC,kCAAD;AAAgB,IAAA,KAAK,EAAE;AAAE6C,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAvB;AAA0C,IAAA,GAAG,EAAE;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAA/C;AAAkE,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAA1E;AAA6G,IAAA,KAAK,EAAEhB,MAAM,CAACiB,QAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACxC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BF,8BAAKC,CAAL,CAAO,SAAP,CAA3B,CADF,CALF,CAvCF,CAVF,EA2DGhC,OAAO,IACN,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEyE,MAAM,CAACzE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5DJ,EAgEGK,WAAW,IAAIA,WAAW,CAAC6E,MAAZ,GAAqB,CAApC,IACC,6BAAC,gCAAD;AACE,IAAA,OAAO,EAAEhF,SADX;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,KAFX;AAGE,IAAA,mBAAmB,MAHrB;AAIE,IAAA,aAAa,EAAC,QAJhB;AAKE,IAAA,cAAc,EAAE;AAAEkF,MAAAA,eAAe,EAAE;AAAnB,KALlB;AAME,IAAA,oBAAoB,EAAE;AAAEA,MAAAA,eAAe,EAAE,MAAnB;AAA2BM,MAAAA,YAAY,EAAE,EAAzC;AAA6CR,MAAAA,WAAW,EAAE,CAA1D;AAA6DS,MAAAA,YAAY,EAAE;AAA3E,KANxB;AAOE,IAAA,iBAAiB,EAAE,GAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,6BAAC,qCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AACX9E,MAAAA,OAAO,EAAE,MADE;AAEXC,MAAAA,aAAa,EAAE,KAFJ;AAGXC,MAAAA,UAAU,EAAE,QAHD;AAIX6E,MAAAA,cAAc,EAAE,QAJL;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,6BAAC,oBAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAE3E,MAAAA,QAAQ,EAAE,EAAZ;AAAgBgE,MAAAA,WAAW,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDpD,8BAAKC,CAAL,CAAO,gBAAP,CAAhD,CARF,CADF,EAYItB,eAZJ,CARF,CAjEJ,CADF;AA6FD,CApTD;;eAsTevB,K;;;AAGf,IAAMsF,MAAM,GAAGsB,wBAAWC,MAAX,CAAkB;AAC/BtB,EAAAA,IAAI,EAAE;AACJuB,IAAAA,IAAI,EAAE,CADF;AAEJ/E,IAAAA,OAAO,EAAE,EAFL;AAGJH,IAAAA,aAAa,EAAE,QAHX;AAIJ8E,IAAAA,cAAc,EAAE,QAJZ;AAKJR,IAAAA,eAAe,EAAE,OALb;AAMJa,IAAAA,QAAQ,EAAE;AANN,GADyB;AAS/BpB,EAAAA,OAAO,EAAE;AACP9D,IAAAA,UAAU,EAAE;AADL,GATsB;AAY/BmF,EAAAA,KAAK,EAAE;AACLL,IAAAA,YAAY,EAAE,EADT;AAEL3E,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAZwB;AAiB/B6D,EAAAA,SAAS,EAAE;AACThE,IAAAA,KAAK,EAAE,KADE;AAETmF,IAAAA,iBAAiB,EAAE,MAFV;AAGTC,IAAAA,iBAAiB,EAAE,GAHV;AAITvF,IAAAA,OAAO,EAAE,MAJA;AAKTC,IAAAA,aAAa,EAAE,KALN;AAMTC,IAAAA,UAAU,EAAE,QANH;AAOTmE,IAAAA,WAAW,EAAE,CAPJ;AAQTW,IAAAA,YAAY,EAAE;AARL,GAjBoB;AA2B/BP,EAAAA,WAAW,EAAE;AACXtE,IAAAA,KAAK,EAAE,KADI;AAEXqF,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,SAAS,EAAE;AAHA,GA3BkB;AAgC/BC,EAAAA,QAAQ,EAAE;AACRvF,IAAAA,KAAK,EAAE,KADC;AAERqF,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAhCqB;AAqC/Bb,EAAAA,QAAQ,EAAE;AACRG,IAAAA,cAAc,EAAE,QADR;AAER7E,IAAAA,UAAU,EAAE,QAFJ;AAGR2E,IAAAA,YAAY,EAAE,CAHN;AAIRW,IAAAA,MAAM,EAAE;AAJA,GArCqB;AA2C/BrE,EAAAA,IAAI,EAAE;AACJwE,IAAAA,KAAK,EAAE,OADH;AAEJtF,IAAAA,QAAQ,EAAE;AAFN,GA3CyB;AA+C/B4D,EAAAA,IAAI,EAAE;AACJ2B,IAAAA,UAAU,EAAE,SADR;AAEJzF,IAAAA,KAAK,EAAE,GAFH;AAGJqF,IAAAA,MAAM,EAAE,GAHJ;AAIJR,IAAAA,YAAY,EAAE;AAJV,GA/CyB;AAqD/Ba,EAAAA,SAAS,EAAE;AACTxF,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,SAAS,EAAE,MAFF;AAGT0E,IAAAA,YAAY,EAAE;AAHL,GArDoB;AA0D/BnB,EAAAA,KAAK,EAAE;AACL2B,IAAAA,MAAM,EAAE,EADH;AAELrF,IAAAA,KAAK,EAAE,GAFF;AAGLiF,IAAAA,QAAQ,EAAE,UAHL;AAILU,IAAAA,GAAG,EAAE,CAJA;AAKLC,IAAAA,KAAK,EAAE,CAAC,EALH;AAMLxB,IAAAA,eAAe,EAAE;AANZ,GA1DwB;AAkE/BrF,EAAAA,OAAO,EAAE;AACPkG,IAAAA,QAAQ,EAAE,UADH;AAEPY,IAAAA,IAAI,EAAE,CAFC;AAGPD,IAAAA,KAAK,EAAE,CAHA;AAIPD,IAAAA,GAAG,EAAE,CAJE;AAKPG,IAAAA,MAAM,EAAE,CALD;AAMP/F,IAAAA,UAAU,EAAE,QANL;AAOP6E,IAAAA,cAAc,EAAE,QAPT;AAQPR,IAAAA,eAAe,EAAE;AARV;AAlEsB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Alert,\n  TextInput\n} from 'react-native';\nimport { Picker } from '@react-native-community/picker';\nimport { CheckBox } from 'react-native-elements'\nimport LinearGradient from 'react-native-linear-gradient';\nimport { I18nLocalize, i18n } from 'react-native-i18n-localize';\nimport { Input } from 'react-native-elements';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport img from '../assets/images/logo.png';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { BubblesLoader } from 'react-native-indicator';\nimport Overlay from 'react-native-modal-overlay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MyFetch } from '../fetch';\n\nconst LogIn = ({ navigation, route }) => {\n\n  const [language, selectLang] = useState(\"de\");// language set\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassWord] = useState(\"\");\n  const [remember, setRemember] = useState();\n  const [selectedValue, setSelectedValue] = useState(\"de\");// flag set\n  const [loading, setLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const isMountedRef = useRef(null);  //ios-diff\n\n\n\n  const [accountList, setAccountList] = useState(null);\n\n  const setSelectedAccount = (index) => {\n    let info = accountList[index];\n    setUserName(info.username);\n    setPassWord(info.password);\n  }\n\n  const accountListView = isMountedRef.current && accountList && accountList.map((item, index) =>\n    <View key={index} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%'\n    }}>\n      <TouchableOpacity\n        activeOpacity={.5}\n        style={{ padding: 10, width: '85%' }}\n        onPress={() => {\n          setModalOpen(false);\n          setSelectedAccount(index);\n        }}\n      >\n        <Text style={{ fontSize: 22, textAlign: 'center' }}>{item.username}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => trashAccount(index)}>\n        <Icon name='trash' size={22} color=\"#126FEA\" />\n      </TouchableOpacity>\n    </View>\n  )\n\n  const setTick = () => {\n    if (remember == true) {\n      setRemember(false);\n    }\n    else {\n      setRemember(true);\n    }\n  }\n\n  const changeLanguage = (lang) => {\n    selectLang(lang);\n    I18nLocalize.setLanguage(lang);\n    storeInitLangData(lang);\n  }\n\n  const failedConnect = () => {\n    setLoading(false);\n\n    Alert.alert(\n      i18n.t('warn'),\n      i18n.t('not_connect_server'),\n      [{ text: i18n.t('ok'), },]\n    );\n  }\n\n  const handleLogin = (data) => {\n    setLoading(false);\n    if (data.pass == \"getin\") {\n      if (remember) {\n        storeInitLoginData(username, password);\n      }\n\n      setTimeout(() => {\n        navigation.replace('UserInfo', {\n\n          headerTitle: i18n.t('welcome') + ' ' + username,\n          customerID: data.customerID,\n          clerk: data.clerk\n        });\n      }, 500);\n\n    }\n    else if (data.pass == \"invalid\") {\n      Alert.alert(\n        i18n.t('warn'),\n        i18n.t('wrong_user'),\n        [{ text: i18n.t('ok'), },]\n      );\n    }\n  }\n\n  const pressLogIn = () => {\n\n    const formData = new FormData();\n\n    formData.append('userId', username);\n    formData.append('passWord', password);\n\n    setLoading(true);\n\n    MyFetch(25, fetch('http://150.95.129.109/wp-json/violation/login', {\n      method: 'POST',\n      body: formData\n    }))\n      .then((response) => response.json())\n      .then((json) => { handleLogin(json); })\n      .catch((error) => {\n        console.log(error);\n        failedConnect();\n      })\n\n  };\n\n  const storeInitLangData = async (lang) => {\n    try {\n      await AsyncStorage.setItem('initialLang', lang)\n    } catch (e) {\n      \n    }\n  }\n\n  const getInitLangData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('initialLang')\n      if (value !== null && isMountedRef.current) {   //ios-diff\n        selectLang(value);\n        setSelectedValue(value);\n      }\n    } catch (e) {\n      // error reading value\n    }\n  }\n\n  const getInitLoginData = async () => {\n    try {\n\n      const acc_arr = await AsyncStorage.getItem('accountList');\n\n      if (acc_arr !== null && isMountedRef.current) {  //ios-diff\n        setAccountList(JSON.parse(acc_arr));\n        let info = JSON.parse(acc_arr);     //ios-diff-2\n        setUserName(info[0].username);\n        setPassWord(info[0].password);\n      }\n    } catch (e) {\n    }\n  }\n\n  const storeInitLoginData = async (user_id, user_pass) => {\n    try {\n\n      let temp = accountList;\n      let exist = false;\n\n      if (temp) {\n        temp.map((item, index) => {\n          if (item.username == user_id)\n            exist = true;\n        })\n      }\n\n      if (!exist) {\n        if (temp)\n          temp = [...temp, {\n            username: user_id,\n            password: user_pass\n          }];\n        else\n          temp = [{\n            username: user_id,\n            password: user_pass\n          }]\n      }\n\n      setAccountList(temp);\n\n      await AsyncStorage.setItem('accountList', JSON.stringify(temp));\n\n    } catch (e) {\n      // saving error\n    }\n  }\n\n  const trashAccount = async (index) => {\n\n    let temp = accountList;\n    temp.splice(index, 1);\n    setAccountList(temp);\n    setModalOpen(false);\n    storeAccounts(temp);\n\n  }\n\n  const storeAccounts = async (temp) => {\n    try {\n      await AsyncStorage.setItem('accountList', JSON.stringify(temp));\n    } catch (e) { }\n  }\n\n  useEffect(() => {\n    isMountedRef.current = true; //ios-diff\n\n    getInitLangData();\n    getInitLoginData();\n\n    return () => isMountedRef.current = false; //ios-diff\n\n  }, [])\n\n\n  return (\n    <View style={styles.main}>\n      <Picker\n        selectedValue={selectedValue}\n        style={styles.flags}\n        onValueChange={(itemValue, itemIndex) => { setSelectedValue(itemValue); changeLanguage(itemValue) }}>\n        <Picker.Item label=\"🇩🇪  Deutsch\" value=\"de\" />\n        <Picker.Item label=\"🇬🇧  English\" value=\"en\" />\n        <Picker.Item label=\"🇫🇷  Français\" value=\"fr\" />\n        <Picker.Item label=\"🇮🇹  Italiano\" value=\"it\" />\n      </Picker>\n      <View style={styles.contain}>\n        <Image style={styles.logo} source={img} />\n\n        <View style={styles.itemInput}>\n          <TouchableOpacity\n            activeOpacity={.5}\n            onPress={() => { if (accountList && accountList.length > 0) setModalOpen(true) }}\n          >\n            <Icon name='user' size={23} color=\"#126FEA\" />\n          </TouchableOpacity>\n          <TextInput\n            onChangeText={text => setUserName(text)}\n            autoCapitalize='none'\n            value={username}\n            placeholder={i18n.t('user_name')}\n            style={{ width: '90%', fontSize: 20, paddingLeft: 10 }}\n          />\n        </View>\n        <View style={styles.itemInput}>\n          <Icon name='lock' size={23} color=\"#126FEA\" />\n          <TextInput\n            onChangeText={text => setPassWord(text)}\n            autoCapitalize='none'\n            value={password}\n            secureTextEntry={true}\n            placeholder={i18n.t('password')}\n            style={{ width: '90%', fontSize: 20, paddingLeft: 10 }}\n          />\n        </View>\n\n        <CheckBox\n          title={i18n.t('remember_me')}\n          iconType='font-awesome'\n          checkedIcon='check'\n          checked={remember}\n          onIconPress={setTick}\n          textStyle={{ fontSize: 18 }}\n          containerStyle={{ alignSelf: \"flex-start\", paddingLeft: 0, backgroundColor: \"white\", borderColor: \"white\" }}\n        />\n        <TouchableOpacity\n          style={styles.loginbutton}\n          activeOpacity={.5}\n          onPress={pressLogIn}\n        >\n          <LinearGradient start={{ x: 0, y: 0.75 }} end={{ x: 1, y: 0.25 }} colors={['#2974FA', '#2974FA', '#2974FA']} style={styles.gradient}>\n            <Text style={styles.text}>{i18n.t('sign_in')}</Text>\n          </LinearGradient>\n        </TouchableOpacity>\n      </View>\n      {loading &&\n        <View style={styles.loading}>\n          <BubblesLoader />\n        </View>\n      }\n      {accountList && accountList.length > 0 &&\n        <Overlay\n          visible={modalOpen}\n          onClose={() => setModalOpen(false)}\n          closeOnTouchOutside\n          animationType=\"fadeIn\"\n          containerStyle={{ backgroundColor: 'rgba(27, 27, 27, 0.78)' }}\n          childrenWrapperStyle={{ backgroundColor: '#eee', borderRadius: 10, paddingLeft: 0, paddingRight: 0 }}\n          animationDuration={500}>\n          <ScrollView>\n            <View style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginBottom: 10\n            }}>\n              <Icon name='user-circle' size={22} color=\"#126FEA\" />\n              <Text style={{ fontSize: 22, paddingLeft: 5 }}>{i18n.t('choose_account')}</Text>\n            </View>\n            {\n              accountListView\n            }\n          </ScrollView>\n        </Overlay>\n      }\n    </View>\n  );\n}\n\nexport default LogIn;\n\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    padding: 30,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    position: 'relative'\n  },\n  contain: {\n    alignItems: 'center',\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 25,\n    textAlign: 'center'\n  },\n  itemInput: {\n    width: '95%',\n    borderBottomColor: 'grey',\n    borderBottomWidth: 0.6,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 5,\n    marginBottom: 10\n  },\n  loginbutton: {\n    width: '90%',\n    height: 50,\n    marginTop: 45\n  },\n  qrbutton: {\n    width: '90%',\n    height: 50,\n    marginTop: 25\n  },\n  gradient: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    height: '100%'\n  },\n  text: {\n    color: 'white',\n    fontSize: 23\n  },\n  logo: {\n    resizeMode: 'contain',\n    width: 100,\n    height: 100,\n    marginBottom: 70\n  },\n  loginText: {\n    fontSize: 30,\n    textAlign: 'left',\n    marginBottom: 50\n  },\n  flags: {\n    height: 50,\n    width: 160,\n    position: \"absolute\",\n    top: 0,\n    right: -40,\n    backgroundColor: 'white'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(97, 97, 97, 0.2)'\n  }\n});"]},"metadata":{},"sourceType":"script"}