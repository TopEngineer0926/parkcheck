{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _art = require(\"@react-native-community/art\");\n\nvar _AnimatedCircle = _interopRequireDefault(require(\"../animated/AnimatedCircle\"));\n\nvar _const = require(\"../const\");\n\nvar _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\PulseLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PulseLoader = function (_React$PureComponent) {\n  (0, _inherits2.default)(PulseLoader, _React$PureComponent);\n\n  var _super = _createSuper(PulseLoader);\n\n  function PulseLoader() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PulseLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      effect: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 1\n      })\n    };\n\n    _this._animation = function () {\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.effect.x, {\n        toValue: 1,\n        duration: _this.props.frequency,\n        useNativeDriver: false\n      }), _reactNative.Animated.timing(_this.state.effect.y, {\n        toValue: 0.05,\n        duration: _this.props.frequency,\n        useNativeDriver: false\n      })]).start(function () {\n        if (!_this.unmounted) {\n          _this.state.effect.setValue({\n            x: 0,\n            y: 1\n          });\n\n          _this._animation();\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(PulseLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size;\n      return _react.default.createElement(_art.Surface, {\n        width: size,\n        height: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_AnimatedCircle.default, {\n        radius: size,\n        fill: color,\n        scale: this.state.effect.x,\n        opacity: this.state.effect.y,\n        x: size / 2,\n        y: size / 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return PulseLoader;\n}(_react.default.PureComponent);\n\nexports.default = PulseLoader;\nPulseLoader.propTypes = {\n  color: _propTypes.default.string,\n  size: _propTypes.default.number,\n  frequency: _propTypes.default.number\n};\nPulseLoader.defaultProps = {\n  color: _const.color,\n  size: 30,\n  frequency: 1000\n};","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/node_modules/react-native-indicator/lib/loader/PulseLoader.js"],"names":["PulseLoader","state","effect","Animated","ValueXY","x","y","_animation","parallel","timing","toValue","duration","props","frequency","useNativeDriver","start","unmounted","setValue","color","size","React","PureComponent","propTypes","PropTypes","string","number","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEqBA,W;;;;;;;;;;;;;;;UAanBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,IAAIC,sBAASC,OAAb,CAAqB;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAArB;AADF,K;;UAYRC,U,GAAa,YAAM;AACjBJ,4BAASK,QAAT,CAAkB,CAChBL,sBAASM,MAAT,CAAgB,MAAKR,KAAL,CAAWC,MAAX,CAAkBG,CAAlC,EAAqC;AACnCK,QAAAA,OAAO,EAAE,CAD0B;AAEnCC,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC,SAFc;AAGnCC,QAAAA,eAAe,EAAE;AAHkB,OAArC,CADgB,EAMhBX,sBAASM,MAAT,CAAgB,MAAKR,KAAL,CAAWC,MAAX,CAAkBI,CAAlC,EAAqC;AACnCI,QAAAA,OAAO,EAAE,IAD0B;AAEnCC,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC,SAFc;AAGnCC,QAAAA,eAAe,EAAE;AAHkB,OAArC,CANgB,CAAlB,EAWGC,KAXH,CAWS,YAAM;AACb,YAAI,CAAC,MAAKC,SAAV,EAAqB;AACnB,gBAAKf,KAAL,CAAWC,MAAX,CAAkBe,QAAlB,CAA2B;AAAEZ,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAA3B;;AACA,gBAAKC,UAAL;AACD;AACF,OAhBD;AAiBD,K;;;;;;;wCA1BmB;AAClB,WAAKA,UAAL;AACD;;;2CAEsB;AACrB,WAAKS,SAAL,GAAiB,IAAjB;AACD;;;6BAsBQ;AAAA,wBACiB,KAAKJ,KADtB;AAAA,UACCM,KADD,eACCA,KADD;AAAA,UACQC,IADR,eACQA,IADR;AAEP,aACE,6BAAC,YAAD;AAAS,QAAA,KAAK,EAAEA,IAAhB;AAAsB,QAAA,MAAM,EAAEA,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,uBAAD;AACE,QAAA,MAAM,EAAEA,IADV;AAEE,QAAA,IAAI,EAAED,KAFR;AAGE,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,MAAX,CAAkBG,CAH3B;AAIE,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,CAJ7B;AAKE,QAAA,CAAC,EAAEa,IAAI,GAAG,CALZ;AAME,QAAA,CAAC,EAAEA,IAAI,GAAG,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD;;;EA3DsCC,eAAMC,a;;;AAA1BrB,W,CACZsB,S,GAAY;AACjBJ,EAAAA,KAAK,EAAEK,mBAAUC,MADA;AAEjBL,EAAAA,IAAI,EAAEI,mBAAUE,MAFC;AAGjBZ,EAAAA,SAAS,EAAEU,mBAAUE;AAHJ,C;AADAzB,W,CAOZ0B,Y,GAAe;AACpBR,EAAAA,KAAK,EAALA,YADoB;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBN,EAAAA,SAAS,EAAE;AAHS,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class PulseLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n    frequency: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 30,\n    frequency: 1000,\n  };\n\n  state = {\n    effect: new Animated.ValueXY({ x: 0, y: 1 }),\n  };\n\n  componentDidMount() {\n    this._animation();\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  _animation = () => {\n    Animated.parallel([\n      Animated.timing(this.state.effect.x, {\n        toValue: 1,\n        duration: this.props.frequency,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.state.effect.y, {\n        toValue: 0.05,\n        duration: this.props.frequency,\n        useNativeDriver: false,\n      }),\n    ]).start(() => {\n      if (!this.unmounted) {\n        this.state.effect.setValue({ x: 0, y: 1 });\n        this._animation();\n      }\n    });\n  };\n\n  render() {\n    const { color, size } = this.props;\n    return (\n      <Surface width={size} height={size}>\n        <AnimatedCircle\n          radius={size}\n          fill={color}\n          scale={this.state.effect.x}\n          opacity={this.state.effect.y}\n          x={size / 2}\n          y={size / 2}\n        />\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}