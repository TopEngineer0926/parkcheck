{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _LogIn = _interopRequireDefault(require(\"./src/screens/LogIn\"));\n\nvar _UserInfo = _interopRequireDefault(require(\"./src/screens/UserInfo\"));\n\nvar _CreateViolation = _interopRequireDefault(require(\"./src/screens/CreateViolation\"));\n\nvar _Done = _interopRequireDefault(require(\"./src/screens/Done\"));\n\nvar _Landing = _interopRequireDefault(require(\"./src/screens/Landing\"));\n\nvar _ScanScreen = _interopRequireDefault(require(\"./src/screens/ScanScreen\"));\n\nvar _Alpr = _interopRequireDefault(require(\"./src/screens/Alpr\"));\n\nvar _History = _interopRequireDefault(require(\"./src/screens/History\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _reactNativeI18nLocalize = require(\"react-native-i18n-localize\");\n\nvar _en = _interopRequireDefault(require(\"./src/translate/en.json\"));\n\nvar _de = _interopRequireDefault(require(\"./src/translate/de.json\"));\n\nvar _it = _interopRequireDefault(require(\"./src/translate/it.json\"));\n\nvar _fr = _interopRequireDefault(require(\"./src/translate/fr.json\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\App.js\";\n\n_reactNativeI18nLocalize.I18nLocalize.initialLanguage({\n  en: _en.default,\n  de: _de.default,\n  fr: _fr.default,\n  it: _it.default\n});\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nvar App = function App() {\n  (0, _react.useEffect)(function () {\n    getInitData();\n  });\n\n  getInitData = function getInitData() {\n    var value;\n    return _regenerator.default.async(function getInitData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('initialLang'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              _reactNativeI18nLocalize.I18nLocalize.setLanguage(value);\n            } else {\n              _reactNativeI18nLocalize.I18nLocalize.setLanguage('de');\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _react.default.createElement(_native.NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Landing\",\n    component: _Landing.default,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Scanscreen\",\n    component: _ScanScreen.default,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Alpr\",\n    component: _Alpr.default,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LogIn\",\n    component: _LogIn.default,\n    options: function options(_ref) {\n      var route = _ref.route;\n      return {\n        title: route.params.headerTitle,\n        headerStyle: {\n          backgroundColor: '#2974FA'\n        },\n        headerTintColor: '#fff'\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"UserInfo\",\n    component: _UserInfo.default,\n    options: function options(_ref2) {\n      var route = _ref2.route,\n          navigation = _ref2.navigation;\n      return {\n        title: route.params.headerTitle,\n        headerStyle: {\n          backgroundColor: '#2974FA'\n        },\n        headerTintColor: '#fff',\n        headerRight: function headerRight() {\n          return _react.default.createElement(_reactNative.TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.replace('LogIn', {\n                headerTitle: _reactNativeI18nLocalize.i18n.t('parkcheck') + ' ' + _reactNativeI18nLocalize.i18n.t('switzerland')\n              });\n            },\n            activeOpacity: .5,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }\n          }, _react.default.createElement(_FontAwesome.default, {\n            name: \"sign-out\",\n            size: 22,\n            color: \"#fff\",\n            style: {\n              marginRight: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"CreateViolation\",\n    component: _CreateViolation.default,\n    options: function options(_ref3) {\n      var route = _ref3.route;\n      return {\n        title: route.params.headerTitle,\n        headerStyle: {\n          backgroundColor: '#2974FA'\n        },\n        headerTintColor: '#fff'\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Done\",\n    component: _Done.default,\n    options: function options(_ref4) {\n      var route = _ref4.route;\n      return {\n        title: route.params.headerTitle,\n        headerStyle: {\n          backgroundColor: '#2974FA'\n        },\n        headerTintColor: '#fff'\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"History\",\n    component: _History.default,\n    options: function options(_ref5) {\n      var route = _ref5.route;\n      return {\n        title: route.params.headerTitle,\n        headerStyle: {\n          backgroundColor: '#2974FA'\n        },\n        headerTintColor: '#fff'\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/App.js"],"names":["I18nLocalize","initialLanguage","en","de","fr","it","Stack","App","getInitData","AsyncStorage","getItem","value","setLanguage","Landing","headerShown","Scanscreen","Alpr","LogIn","route","title","params","headerTitle","headerStyle","backgroundColor","headerTintColor","UserInfo","navigation","headerRight","replace","i18n","t","marginRight","CreateViolation","Done","History"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LogIn from './src/screens/LogIn';\nimport UserInfo from './src/screens/UserInfo';\nimport CreateViolation from './src/screens/CreateViolation';\nimport Done from './src/screens/Done';\nimport Landing from './src/screens/Landing';\nimport Scanscreen from './src/screens/ScanScreen';\nimport Alpr from './src/screens/Alpr';\nimport History from './src/screens/History';\n\nimport {\n  TouchableOpacity\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport AsyncStorage from '@react-native-community/async-storage';\n\nimport { I18nLocalize, i18n } from 'react-native-i18n-localize'\nimport en from './src/translate/en.json';\nimport de from './src/translate/de.json';\nimport it from './src/translate/it.json';\nimport fr from './src/translate/fr.json';\n\n\nI18nLocalize.initialLanguage({ en, de, fr, it })\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n\n  useEffect(() => {\n    getInitData();\n  })\n\n  getInitData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('initialLang')\n      if (value !== null) {\n        I18nLocalize.setLanguage(value);\n      }\n      else {\n        I18nLocalize.setLanguage('de');\n      }\n    } catch (e) {\n      // error reading value\n    }\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Landing\"\n          component={Landing}\n          options={{\n            headerShown: false\n          }} />\n        <Stack.Screen\n          name=\"Scanscreen\"\n          component={Scanscreen}\n          options={{\n            headerShown: false\n          }} />\n        <Stack.Screen\n          name=\"Alpr\"\n          component={Alpr}\n          options={{\n            headerShown: false\n          }} />\n        <Stack.Screen\n          name=\"LogIn\"\n          component={LogIn}\n          options={({ route }) => ({\n            title: route.params.headerTitle,\n            headerStyle: {\n              backgroundColor: '#2974FA',\n            },\n            headerTintColor: '#fff',\n          })} />\n        <Stack.Screen\n          name=\"UserInfo\"\n          component={UserInfo}\n          options={({ route, navigation }) => ({\n            title: route.params.headerTitle,\n            headerStyle: {\n              backgroundColor: '#2974FA',\n            },\n            headerTintColor: '#fff',\n            headerRight: () => (\n              <TouchableOpacity\n                onPress={() => {navigation.replace('LogIn',{headerTitle: (i18n.t('parkcheck')+' '+i18n.t('switzerland'))})}}\n                activeOpacity={.5}>\n                <Icon name=\"sign-out\" size={22} color=\"#fff\" style={{ marginRight: 10 }} />\n              </TouchableOpacity>\n            )\n          })}\n        />\n        <Stack.Screen\n          name=\"CreateViolation\"\n          component={CreateViolation}\n          options={({ route }) => ({\n            title: route.params.headerTitle,\n            headerStyle: {\n              backgroundColor: '#2974FA',\n            },\n            headerTintColor: '#fff',\n          })}\n        />\n        <Stack.Screen\n          name=\"Done\"\n          component={Done}\n          options={({ route }) => ({\n            title: route.params.headerTitle,\n            headerStyle: {\n              backgroundColor: '#2974FA',\n            },\n            headerTintColor: '#fff',\n          })}\n        />\n        <Stack.Screen\n          name=\"History\"\n          component={History}\n          options={({ route }) => ({\n            title: route.params.headerTitle,\n            headerStyle: {\n              backgroundColor: '#2974FA',\n            },\n            headerTintColor: '#fff',\n          })} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"script"}