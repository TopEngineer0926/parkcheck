{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _art = require(\"@react-native-community/art\");\n\nvar _AnimatedCircle = _interopRequireDefault(require(\"../animated/AnimatedCircle\"));\n\nvar _const = require(\"../const\");\n\nvar _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\RotationHoleLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RotationHoleLoader = function (_React$PureComponent) {\n  (0, _inherits2.default)(RotationHoleLoader, _React$PureComponent);\n\n  var _super = _createSuper(RotationHoleLoader);\n\n  function RotationHoleLoader() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RotationHoleLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      degree: new _reactNative.Animated.Value(0)\n    };\n\n    _this._animation = function () {\n      _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.degree, {\n        toValue: 360,\n        duration: _this.props.rotationSpeed,\n        easing: _reactNative.Easing.linear,\n        useNativeDriver: false\n      })]).start(function () {\n        if (!_this.unmounted) {\n          _this.state.degree.setValue(0);\n\n          _this._animation();\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RotationHoleLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color,\n          strokeWith = _this$props.strokeWith;\n      var degree = this.state.degree.interpolate({\n        inputRange: [0, 360],\n        outputRange: ['0deg', '360deg']\n      });\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: {\n          transform: [{\n            rotate: degree\n          }],\n          backgroundColor: 'rgba(0,0,0,0)',\n          width: size + strokeWith * 2,\n          height: size + strokeWith * 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 4\n        }\n      }, _react.default.createElement(_art.Surface, {\n        width: size + strokeWith * 2,\n        height: size + strokeWith * 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_art.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }\n      }, _react.default.createElement(_AnimatedCircle.default, {\n        stroke: color,\n        opacity: 0.3,\n        strokeWidth: strokeWith,\n        radius: size,\n        x: size / 2 + strokeWith,\n        y: size / 2 + strokeWith,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_AnimatedCircle.default, {\n        fill: color,\n        radius: strokeWith,\n        x: size / 2 + strokeWith,\n        y: strokeWith,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }]);\n  return RotationHoleLoader;\n}(_react.default.PureComponent);\n\nexports.default = RotationHoleLoader;\nRotationHoleLoader.propTypes = {\n  size: _propTypes.default.number,\n  color: _propTypes.default.string,\n  strokeWith: _propTypes.default.number,\n  rotationSpeed: _propTypes.default.number\n};\nRotationHoleLoader.defaultProps = {\n  size: 40,\n  color: _const.color,\n  rotationSpeed: 800,\n  strokeWith: 8\n};","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/node_modules/react-native-indicator/lib/loader/RotationHoleLoader.js"],"names":["RotationHoleLoader","state","degree","Animated","Value","_animation","sequence","timing","toValue","duration","props","rotationSpeed","easing","Easing","linear","useNativeDriver","start","unmounted","setValue","size","color","strokeWith","interpolate","inputRange","outputRange","transform","rotate","backgroundColor","width","height","React","PureComponent","propTypes","PropTypes","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing } from 'react-native';\nimport { Surface, Group } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class RotationHoleLoader extends React.PureComponent {\n\tstatic propTypes = {\n\t\tsize: PropTypes.number,\n\t\tcolor: PropTypes.string,\n\t\tstrokeWith: PropTypes.number,\n\t\trotationSpeed: PropTypes.number\n\t};\n\n\tstatic defaultProps = {\n\t\tsize: 40,\n\t\tcolor,\n\t\trotationSpeed: 800,\n\t\tstrokeWith: 8\n\t};\n\n\tstate = {\n\t\tdegree: new Animated.Value(0)\n\t};\n\n\tcomponentDidMount() {\n\t\tthis._animation();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unmounted = true;\n\t}\n\n\t_animation = () => {\n\t\tAnimated.sequence([\n\t\t\tAnimated.timing(this.state.degree, {\n\t\t\t\ttoValue: 360,\n\t\t\t\tduration: this.props.rotationSpeed,\n\t\t\t\teasing: Easing.linear,\n\t\t\t\tuseNativeDriver: false\n\t\t\t})\n\t\t]).start(() => {\n\t\t\tif (!this.unmounted) {\n\t\t\t\tthis.state.degree.setValue(0);\n\t\t\t\tthis._animation();\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { size, color, strokeWith } = this.props;\n\t\tconst degree = this.state.degree.interpolate({\n\t\t\tinputRange: [0, 360],\n\t\t\toutputRange: ['0deg', '360deg']\n\t\t});\n\t\treturn (\n\t\t\t<Animated.View\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: [{ rotate: degree }],\n\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0)',\n\t\t\t\t\twidth: size + strokeWith * 2,\n\t\t\t\t\theight: size + strokeWith * 2\n\t\t\t\t}}>\n\t\t\t\t<Surface width={size + strokeWith * 2} height={size + strokeWith * 2}>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\t\tstroke={color}\n\t\t\t\t\t\t\topacity={0.3}\n\t\t\t\t\t\t\tstrokeWidth={strokeWith}\n\t\t\t\t\t\t\tradius={size}\n\t\t\t\t\t\t\tx={size / 2 + strokeWith}\n\t\t\t\t\t\t\ty={size / 2 + strokeWith}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\t\tfill={color}\n\t\t\t\t\t\t\tradius={strokeWith}\n\t\t\t\t\t\t\tx={size / 2 + strokeWith}\n\t\t\t\t\t\t\ty={strokeWith}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Group>\n\t\t\t\t</Surface>\n\t\t\t</Animated.View>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}