{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _art = require(\"@react-native-community/art\");\n\nvar _AnimatedCircle = _interopRequireDefault(require(\"../animated/AnimatedCircle\"));\n\nvar _const = require(\"../const\");\n\nvar _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\RippleLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RippleLoader = function (_React$PureComponent) {\n  (0, _inherits2.default)(RippleLoader, _React$PureComponent);\n\n  var _super = _createSuper(RippleLoader);\n\n  function RippleLoader() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RippleLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scales: [new _reactNative.Animated.Value(0.1), new _reactNative.Animated.Value(0.1)],\n      opacities: [new _reactNative.Animated.Value(1), new _reactNative.Animated.Value(1)]\n    };\n    _this.timers = [];\n\n    _this._animation = function (i) {\n      var frequency = _this.props.frequency;\n\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.scales[i], {\n        toValue: 1,\n        duration: frequency,\n        useNativeDriver: false\n      }), _reactNative.Animated.timing(_this.state.opacities[i], {\n        toValue: 0,\n        duration: frequency,\n        delay: frequency / 2,\n        useNativeDriver: false\n      })]).start(function () {\n        if (!_this.unmounted) {\n          _this.state.scales[i].setValue(0.1);\n\n          _this.state.opacities[i].setValue(1);\n\n          _this._animation(i);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RippleLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.scales.forEach(function (item, i) {\n        var id = setTimeout(function () {\n          _this2._animation(i);\n        }, i * _this2.props.frequency * 0.75);\n\n        _this2.timers.push(id);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n      this.timers.forEach(function (id) {\n        clearTimeout(id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size,\n          strokeWidth = _this$props.strokeWidth;\n      var _this$state = this.state,\n          scales = _this$state.scales,\n          opacities = _this$state.opacities;\n      return _react.default.createElement(_art.Surface, {\n        width: size + strokeWidth,\n        height: size + strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, scales.map(function (item, i) {\n        return _react.default.createElement(_AnimatedCircle.default, {\n          key: i,\n          radius: size,\n          stroke: color,\n          strokeWidth: strokeWidth,\n          scale: scales[i],\n          opacity: opacities[i],\n          x: (size + strokeWidth) / 2,\n          y: (size + strokeWidth) / 2,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }\n        });\n      }));\n    }\n  }]);\n  return RippleLoader;\n}(_react.default.PureComponent);\n\nexports.default = RippleLoader;\nRippleLoader.propTypes = {\n  color: _propTypes.default.string,\n  size: _propTypes.default.number,\n  strokeWidth: _propTypes.default.number,\n  frequency: _propTypes.default.number\n};\nRippleLoader.defaultProps = {\n  color: _const.color,\n  size: 40,\n  strokeWidth: 3,\n  frequency: 1600\n};","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/node_modules/react-native-indicator/lib/loader/RippleLoader.js"],"names":["RippleLoader","state","scales","Animated","Value","opacities","timers","_animation","i","frequency","props","parallel","timing","toValue","duration","useNativeDriver","delay","start","unmounted","setValue","forEach","item","id","setTimeout","push","clearTimeout","color","size","strokeWidth","map","React","PureComponent","propTypes","PropTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class RippleLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    frequency: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 40,\n    strokeWidth: 3,\n    frequency: 1600,\n  };\n\n  state = {\n    scales: [new Animated.Value(0.1), new Animated.Value(0.1)],\n    opacities: [new Animated.Value(1), new Animated.Value(1)],\n  };\n  timers = [];\n\n  componentDidMount() {\n    this.state.scales.forEach((item, i) => {\n      const id = setTimeout(() => {\n        this._animation(i);\n      }, i * this.props.frequency * 0.75);\n      this.timers.push(id);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.timers.forEach((id) => {\n      clearTimeout(id);\n    });\n  }\n\n  _animation = (i) => {\n    const { frequency } = this.props;\n    Animated.parallel([\n      Animated.timing(this.state.scales[i], {\n        toValue: 1,\n        duration: frequency,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.state.opacities[i], {\n        toValue: 0,\n        duration: frequency,\n        delay: frequency / 2,\n        useNativeDriver: false,\n      }),\n    ]).start(() => {\n      if (!this.unmounted) {\n        this.state.scales[i].setValue(0.1);\n        this.state.opacities[i].setValue(1);\n        this._animation(i);\n      }\n    });\n  };\n\n  render() {\n    const { color, size, strokeWidth } = this.props;\n    const { scales, opacities } = this.state;\n    return (\n      <Surface width={size + strokeWidth} height={size + strokeWidth}>\n        {scales.map((item, i) => (\n          <AnimatedCircle\n            key={i}\n            radius={size}\n            stroke={color}\n            strokeWidth={strokeWidth}\n            scale={scales[i]}\n            opacity={opacities[i]}\n            x={(size + strokeWidth) / 2}\n            y={(size + strokeWidth) / 2}\n          />\n        ))}\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}