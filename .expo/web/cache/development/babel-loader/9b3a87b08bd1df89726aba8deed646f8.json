{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _art = require(\"@react-native-community/art\");\n\nvar _AnimatedBar = _interopRequireDefault(require(\"../animated/AnimatedBar\"));\n\nvar _const = require(\"../const\");\n\nvar _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\LinesLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LinesLoader = function (_React$PureComponent) {\n  (0, _inherits2.default)(LinesLoader, _React$PureComponent);\n\n  var _super = _createSuper(LinesLoader);\n\n  function LinesLoader(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, LinesLoader);\n    _this = _super.call(this, props);\n\n    _this._animation = function () {\n      function seq(self, i) {\n        return _reactNative.Animated.sequence([_reactNative.Animated.timing(self.state.heights[i], {\n          toValue: self.props.barHeight,\n          duration: 400,\n          delay: i * 200,\n          useNativeDriver: false\n        }), _reactNative.Animated.timing(self.state.heights[i], {\n          toValue: self.props.barHeight / 3,\n          duration: 400,\n          useNativeDriver: false\n        })]);\n      }\n\n      var anim = [];\n\n      for (var i = 0; i < _this.props.barNumber; i++) {\n        anim.push(seq((0, _assertThisInitialized2.default)(_this), i));\n      }\n\n      _reactNative.Animated.parallel(anim).start(function () {\n        !_this.unmounted && _this._animation();\n      });\n    };\n\n    var heights = [];\n\n    for (var i = 0; i < _this.props.barNumber; i++) {\n      heights.push(new _reactNative.Animated.Value(_this.props.barHeight / 3));\n    }\n\n    _this.state = {\n      heights: heights\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(LinesLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          color = _this$props.color,\n          betweenSpace = _this$props.betweenSpace,\n          barWidth = _this$props.barWidth,\n          barHeight = _this$props.barHeight,\n          barNumber = _this$props.barNumber;\n      return _react.default.createElement(_art.Surface, {\n        width: barWidth * barNumber + betweenSpace * (barNumber - 1),\n        height: barHeight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, this.state.heights.map(function (item, i) {\n        return _react.default.createElement(_AnimatedBar.default, {\n          key: i,\n          fill: color,\n          width: barWidth,\n          height: _this2.state.heights[i],\n          x: i * (betweenSpace + barWidth),\n          y: barHeight / 2,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        });\n      }));\n    }\n  }]);\n  return LinesLoader;\n}(_react.default.PureComponent);\n\nexports.default = LinesLoader;\nLinesLoader.propTypes = {\n  color: _propTypes.default.string,\n  barWidth: _propTypes.default.number,\n  barHeight: _propTypes.default.number,\n  betweenSpace: _propTypes.default.number,\n  barNumber: _propTypes.default.number\n};\nLinesLoader.defaultProps = {\n  color: _const.color,\n  betweenSpace: 2,\n  barNumber: 5,\n  barWidth: 5,\n  barHeight: 40\n};","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/node_modules/react-native-indicator/lib/loader/LinesLoader.js"],"names":["LinesLoader","props","_animation","seq","self","i","Animated","sequence","timing","state","heights","toValue","barHeight","duration","delay","useNativeDriver","anim","barNumber","push","parallel","start","unmounted","Value","color","betweenSpace","barWidth","map","item","React","PureComponent","propTypes","PropTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedBar from '../animated/AnimatedBar';\nimport { color } from '../const';\n\nexport default class LinesLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    barWidth: PropTypes.number,\n    barHeight: PropTypes.number,\n    betweenSpace: PropTypes.number,\n    barNumber: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    betweenSpace: 2,\n    barNumber: 5,\n    barWidth: 5,\n    barHeight: 40,\n  };\n\n  constructor(props) {\n    super(props);\n    const heights = [];\n    for (let i = 0; i < this.props.barNumber; i++) {\n      heights.push(new Animated.Value(this.props.barHeight / 3));\n    }\n\n    this.state = {\n      heights,\n    };\n  }\n\n  componentDidMount() {\n    this._animation();\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  _animation = () => {\n    function seq(self, i) {\n      return Animated.sequence([\n        Animated.timing(self.state.heights[i], {\n          toValue: self.props.barHeight,\n          duration: 400,\n          delay: i * 200,\n          useNativeDriver: false,\n        }),\n        Animated.timing(self.state.heights[i], {\n          toValue: self.props.barHeight / 3,\n          duration: 400,\n          useNativeDriver: false,\n        }),\n      ]);\n    }\n\n    const anim = [];\n    for (let i = 0; i < this.props.barNumber; i++) anim.push(seq(this, i));\n\n    Animated.parallel(anim).start(() => {\n      !this.unmounted && this._animation();\n    });\n  };\n\n  render() {\n    const { color, betweenSpace, barWidth, barHeight, barNumber } = this.props;\n    return (\n      <Surface width={barWidth * barNumber + betweenSpace * (barNumber - 1)} height={barHeight}>\n        {this.state.heights.map((item, i) => (\n          <AnimatedBar\n            key={i}\n            fill={color}\n            width={barWidth}\n            height={this.state.heights[i]}\n            x={i * (betweenSpace + barWidth)}\n            y={barHeight / 2}\n          />\n        ))}\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}