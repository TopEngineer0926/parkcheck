{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _art = require(\"@react-native-community/art\");\n\nvar _AnimatedCircle = _interopRequireDefault(require(\"../animated/AnimatedCircle\"));\n\nvar _const = require(\"../const\");\n\nvar _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\node_modules\\\\react-native-indicator\\\\lib\\\\loader\\\\LineDotsLoader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LineDotsLoader = function (_React$PureComponent) {\n  (0, _inherits2.default)(LineDotsLoader, _React$PureComponent);\n\n  var _super = _createSuper(LineDotsLoader);\n\n  function LineDotsLoader(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, LineDotsLoader);\n    _this = _super.call(this, props);\n\n    _this._animation = function () {\n      _this.state.x.forEach(function (item, i) {\n        _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.x[i], {\n          toValue: _this.centerX[i],\n          duration: 600,\n          delay: i * 50,\n          useNativeDriver: false\n        }), _reactNative.Animated.timing(_this.state.x[i], {\n          toValue: _this.centerX[i],\n          duration: 600,\n          delay: 300,\n          useNativeDriver: false\n        }), _reactNative.Animated.timing(_this.state.x[i], {\n          toValue: _this.destX[i],\n          duration: 600,\n          delay: i * 50,\n          useNativeDriver: false\n        })]).start(function () {\n          if (i === _this.props.dotsNumber - 1) {\n            for (var idx in _this.state.x) {\n              _this.state.x[idx].setValue(_this.beginX[idx]);\n            }\n\n            !_this.unmounted && _this._animation();\n          }\n        });\n      });\n    };\n\n    _this.screenWidth = _reactNative.Dimensions.get('window').width;\n    var _this$props = _this.props,\n        size = _this$props.size,\n        dotsNumber = _this$props.dotsNumber,\n        betweenSpace = _this$props.betweenSpace;\n    var midX = _this.screenWidth / 2 + (size * dotsNumber + betweenSpace * (dotsNumber - 1)) / 2 - size / 2;\n    var circlesX = [];\n    _this.beginX = [];\n    _this.centerX = [];\n    _this.destX = [];\n\n    for (var i = 0; i < dotsNumber; i++) {\n      var beginX = -size / 2 - (size + betweenSpace) * i;\n      circlesX.push(new _reactNative.Animated.Value(beginX));\n\n      _this.beginX.push(beginX);\n\n      _this.centerX.push(midX - i * (size + betweenSpace));\n\n      _this.destX.push(_this.screenWidth + size / 2 + i * (size + betweenSpace));\n    }\n\n    _this.state = {\n      x: circlesX\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(LineDotsLoader, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          color = _this$props2.color,\n          size = _this$props2.size;\n      return _react.default.createElement(_art.Surface, {\n        width: this.screenWidth,\n        height: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, this.state.x.map(function (item, i) {\n        return _react.default.createElement(_AnimatedCircle.default, {\n          key: i,\n          radius: size,\n          fill: color,\n          x: item,\n          y: size / 2,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        });\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }]);\n  return LineDotsLoader;\n}(_react.default.PureComponent);\n\nexports.default = LineDotsLoader;\nLineDotsLoader.propTypes = {\n  color: _propTypes.default.string,\n  size: _propTypes.default.number,\n  dotsNumber: _propTypes.default.number,\n  betweenSpace: _propTypes.default.number\n};\nLineDotsLoader.defaultProps = {\n  color: _const.color,\n  size: 10,\n  dotsNumber: 5,\n  betweenSpace: 5\n};","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/node_modules/react-native-indicator/lib/loader/LineDotsLoader.js"],"names":["LineDotsLoader","props","_animation","state","x","forEach","item","i","Animated","sequence","timing","toValue","centerX","duration","delay","useNativeDriver","destX","start","dotsNumber","idx","setValue","beginX","unmounted","screenWidth","Dimensions","get","width","size","betweenSpace","midX","circlesX","push","Value","color","map","React","PureComponent","propTypes","PropTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Dimensions } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class LineDotsLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n    dotsNumber: PropTypes.number,\n    betweenSpace: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 10,\n    dotsNumber: 5,\n    betweenSpace: 5,\n  };\n\n  constructor(props) {\n    super(props);\n    this.screenWidth = Dimensions.get('window').width;\n    const { size, dotsNumber, betweenSpace } = this.props;\n    const midX =\n      this.screenWidth / 2 + (size * dotsNumber + betweenSpace * (dotsNumber - 1)) / 2 - size / 2;\n    let circlesX = [];\n    this.beginX = [];\n    this.centerX = [];\n    this.destX = [];\n    for (let i = 0; i < dotsNumber; i++) {\n      let beginX = -size / 2 - (size + betweenSpace) * i;\n      circlesX.push(new Animated.Value(beginX));\n      this.beginX.push(beginX);\n      this.centerX.push(midX - i * (size + betweenSpace));\n      this.destX.push(this.screenWidth + size / 2 + i * (size + betweenSpace));\n    }\n\n    this.state = {\n      x: circlesX,\n    };\n  }\n\n  render() {\n    const { color, size } = this.props;\n    return (\n      <Surface width={this.screenWidth} height={size}>\n        {this.state.x.map((item, i) => (\n          <AnimatedCircle key={i} radius={size} fill={color} x={item} y={size / 2} />\n        ))}\n      </Surface>\n    );\n  }\n\n  componentDidMount() {\n    this._animation();\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  _animation = () => {\n    this.state.x.forEach((item, i) => {\n      Animated.sequence([\n        Animated.timing(this.state.x[i], {\n          toValue: this.centerX[i],\n          duration: 600,\n          delay: i * 50,\n          useNativeDriver: false,\n        }),\n        Animated.timing(this.state.x[i], {\n          toValue: this.centerX[i],\n          duration: 600,\n          delay: 300,\n          useNativeDriver: false,\n        }),\n        Animated.timing(this.state.x[i], {\n          toValue: this.destX[i],\n          duration: 600,\n          delay: i * 50,\n          useNativeDriver: false,\n        }),\n      ]).start(() => {\n        if (i === this.props.dotsNumber - 1) {\n          for (let idx in this.state.x) {\n            this.state.x[idx].setValue(this.beginX[idx]);\n          }\n          !this.unmounted && this._animation();\n        }\n      });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"script"}