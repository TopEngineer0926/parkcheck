{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeCamera = require(\"react-native-camera\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactNativeI18nLocalize = require(\"react-native-i18n-localize\");\n\nvar _reactNativeIndicator = require(\"react-native-indicator\");\n\nvar _fetch = require(\"../fetch\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\src\\\\screens\\\\ScanScreen.js\";\n\nvar alertFlag = false;\n\nvar Scanscreen = function Scanscreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var routesName = (0, _native.useNavigationState)(function (state) {\n    return state.routes[state.index].name;\n  });\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      barcodes = _useState2[0],\n      setBarcodes = _useState2[1];\n\n  var cameraRef = (0, _react.useRef)(null);\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var barcodeRecognized = function barcodeRecognized(_ref2) {\n    var barcodes = _ref2.barcodes;\n    console.log('barcodes');\n    setBarcodes(barcodes);\n  };\n\n  var renderBarcodes = function renderBarcodes() {\n    return _react.default.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }\n    }, barcodes.map(renderBarcode));\n  };\n\n  var gotoUpdate = function gotoUpdate(data) {\n    navigation.replace('CreateViolation', {\n      headerTitle: _reactNativeI18nLocalize.i18n.t('update_violation'),\n      type: 'update',\n      autoID: data.ID,\n      triggerName: data.trigger,\n      locationName: data.location,\n      customerID: route.params.customerID,\n      clerk: route.params.clerk\n    });\n    alertFlag = false;\n  };\n\n  var checkExist = function checkExist(data) {\n    setLoading(false);\n    if (data.live == 'exist') gotoUpdate(data);else if (data.live == 'no') _reactNative.Alert.alert(_reactNativeI18nLocalize.i18n.t('warn'), _reactNativeI18nLocalize.i18n.t('not_exist'), [{\n      text: _reactNativeI18nLocalize.i18n.t('ok'),\n      onPress: function onPress() {\n        return alertFlag = false;\n      }\n    }]);\n  };\n\n  var failedConnect = function failedConnect() {\n    setLoading(false);\n    alertFlag = false;\n\n    _reactNative.Alert.alert(_reactNativeI18nLocalize.i18n.t('warn'), _reactNativeI18nLocalize.i18n.t('not_connect_server'), [{\n      text: _reactNativeI18nLocalize.i18n.t('ok')\n    }]);\n  };\n\n  var checkVioInfo = function checkVioInfo(vioID) {\n    setLoading(true);\n    var formData = new FormData();\n    formData.append('scannedID', vioID);\n    formData.append('customerID', route.params.customerID);\n    (0, _fetch.MyFetch)(25, fetch('http://150.95.129.109/wp-json/violation/update', {\n      method: 'POST',\n      body: formData\n    })).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      checkExist(json);\n    }).catch(function (error) {\n      console.log(error);\n      failedConnect();\n    });\n  };\n\n  var renderBarcode = function renderBarcode(data) {\n    if (alertFlag == false) {\n      var first = data.indexOf('00000000');\n\n      if (first > 0) {\n        var vioID = data.substring(first + 7, first + 20);\n        alertFlag = true;\n\n        _reactNative.Alert.alert(_reactNativeI18nLocalize.i18n.t('scanned_data'), 'ID: ' + vioID, [{\n          text: _reactNativeI18nLocalize.i18n.t('cancel'),\n          onPress: function onPress() {\n            alertFlag = false;\n          },\n          style: 'cancel'\n        }, {\n          text: _reactNativeI18nLocalize.i18n.t('ok'),\n          onPress: function onPress() {\n            return checkVioInfo(vioID);\n          },\n          style: 'cancel'\n        }], {\n          cancelable: false\n        });\n      }\n    }\n  };\n\n  var camera = _react.default.createElement(_reactNativeCamera.RNCamera, {\n    ref: cameraRef,\n    style: styles.scanner,\n    captureAudio: false,\n    onBarCodeRead: function onBarCodeRead(barcode) {\n      return renderBarcode(barcode.data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  });\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, routesName == \"Scanscreen\" && camera, loading && _react.default.createElement(_reactNative.View, {\n    style: styles.loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeIndicator.BubblesLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar _default = Scanscreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  scanner: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(97, 97, 97, 0.2)'\n  }\n});","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/src/screens/ScanScreen.js"],"names":["alertFlag","Scanscreen","navigation","route","routesName","state","routes","index","name","barcodes","setBarcodes","cameraRef","loading","setLoading","barcodeRecognized","console","log","renderBarcodes","map","renderBarcode","gotoUpdate","data","replace","headerTitle","i18n","t","type","autoID","ID","triggerName","trigger","locationName","location","customerID","params","clerk","checkExist","live","Alert","alert","text","onPress","failedConnect","checkVioInfo","vioID","formData","FormData","append","fetch","method","body","then","response","json","catch","error","first","indexOf","substring","style","cancelable","camera","styles","scanner","barcode","container","StyleSheet","create","flex","flexDirection","backgroundColor","justifyContent","alignItems","position","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { StyleSheet, View, Alert } from 'react-native'\nimport { RNCamera } from 'react-native-camera'\nimport { useNavigationState } from '@react-navigation/native';\nimport { i18n } from 'react-native-i18n-localize';\nimport { BubblesLoader } from 'react-native-indicator';\nimport { MyFetch } from '../fetch';\n\nvar alertFlag = false;\n\nconst Scanscreen = ({ navigation, route }) => {\n\n\n  const routesName = useNavigationState(state => state.routes[state.index].name)\n  const [barcodes, setBarcodes] = useState([])\n  const cameraRef = useRef(null)\n  const [loading, setLoading] = useState(false);\n\n  const barcodeRecognized = ({ barcodes }) => {\n    console.log('barcodes')\n    setBarcodes(barcodes)\n  }\n\n  const renderBarcodes = () => <View>{barcodes.map(renderBarcode)}</View>\n\n  const gotoUpdate = (data) => {\n\n    navigation.replace('CreateViolation',\n      {\n        headerTitle: i18n.t('update_violation'),\n        type: 'update',\n        autoID: data.ID,\n        triggerName: data.trigger,//ios-diff-2\n        locationName: data.location,\n        customerID: route.params.customerID,\n        clerk: route.params.clerk,\n      }\n    );\n\n    alertFlag = false;\n  }\n\n  const checkExist = (data) => {\n    setLoading(false);\n\n    if (data.live == 'exist')\n      gotoUpdate(data);\n    else if (data.live == 'no')\n      Alert.alert(\n        i18n.t('warn'),\n        i18n.t('not_exist'),\n        [{ text: i18n.t('ok'), onPress: () => alertFlag = false },]\n      );\n\n  }\n\n  const failedConnect = () => {\n    setLoading(false);\n    alertFlag = false;\n    Alert.alert(\n      i18n.t('warn'),\n      i18n.t('not_connect_server'),\n      [{ text: i18n.t('ok'), },]\n    );\n  }\n\n  const checkVioInfo = (vioID) => {\n\n    setLoading(true);\n\n    const formData = new FormData();\n    formData.append('scannedID', vioID);\n    formData.append('customerID', route.params.customerID);\n\n    MyFetch(25, fetch('http://150.95.129.109/wp-json/violation/update', {\n      method: 'POST',\n      body: formData\n    }))\n      .then((response) => response.json())\n      .then((json) => { checkExist(json); })\n      .catch((error) => {\n        console.log(error);\n        failedConnect();\n      })\n\n\n  }\n\n  const renderBarcode = ( data ) => {\n\n    if (alertFlag == false) {\n      let first = data.indexOf('00000000');\n\n      if (first > 0) {\n        let vioID = data.substring(first + 7, first + 20);\n        alertFlag = true;\n        Alert.alert(\n          i18n.t('scanned_data'),\n          'ID: ' + vioID,\n          [\n            {\n              text: i18n.t('cancel'),\n              onPress: () => { alertFlag = false },\n              style: 'cancel'\n            },\n            {\n              text: i18n.t('ok'),\n              onPress: () => checkVioInfo(vioID),\n              style: 'cancel'\n            }\n          ],\n          { cancelable: false }\n        );\n      }\n     \n    }\n  }\n\n  const camera = (\n    <RNCamera\n      ref={cameraRef}\n      style={styles.scanner}\n      captureAudio={false}\n      onBarCodeRead={(barcode) => renderBarcode(barcode.data)}\n      >\n    </RNCamera>\n  );\n\n  return (\n    <View style={styles.container}>\n      {(routesName == \"Scanscreen\") && camera}\n      {loading &&\n        <View style={styles.loading}>\n          <BubblesLoader />\n        </View>\n      }\n    </View>\n  )\n\n}\n\nexport default Scanscreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  scanner: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(97, 97, 97, 0.2)'\n  }\n})"]},"metadata":{},"sourceType":"script"}