{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _picker = require(\"@react-native-community/picker\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\Workspace\\\\Mobile\\\\parkcheck-android-app-master\\\\parkcheck-android-app-master\\\\src\\\\components\\\\mPicker.js\";\n\nvar MPicker = function MPicker(props) {\n  var rows = props.items && props.items.map(function (item, index) {\n    return _react.default.createElement(_picker.Picker.Item, {\n      label: item.label,\n      value: item.value,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 66\n      }\n    });\n  });\n\n  var _useState = (0, _react.useState)(),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      selected = _useState2[0],\n      setOption = _useState2[1];\n\n  var setWhich = function setWhich(itemValue) {\n    setOption(itemValue);\n    props.onSelectItem(itemValue);\n  };\n\n  (0, _react.useEffect)(function () {\n    if (props.items) {\n      setWhich(props.items[0].value);\n    }\n  }, [props.items]);\n  return _react.default.createElement(_picker.Picker, {\n    style: styles.fullwidth,\n    selectedValue: selected,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setWhich(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.items && props.items.map(function (item, index) {\n    return _react.default.createElement(_picker.Picker.Item, {\n      label: item.label,\n      value: item.value,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 65\n      }\n    });\n  }));\n};\n\nvar _default = MPicker;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  fullwidth: {\n    width: '78%',\n    transform: [{\n      scaleX: 1.4\n    }, {\n      scaleY: 1.4\n    }],\n    marginLeft: '13%'\n  }\n});","map":{"version":3,"sources":["D:/Works/Workspace/Mobile/parkcheck-android-app-master/parkcheck-android-app-master/src/components/mPicker.js"],"names":["MPicker","props","rows","items","map","item","index","label","value","selected","setOption","setWhich","itemValue","onSelectItem","styles","fullwidth","itemIndex","StyleSheet","create","width","transform","scaleX","scaleY","marginLeft"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAGvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAiB,6BAAC,cAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAED,IAAI,CAACE,KAAzB;AAAgC,MAAA,KAAK,EAAEF,IAAI,CAACG,KAA5C;AAAmD,MAAA,GAAG,EAAEF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAA,GAAhB,CAA5B;;AAHuB,kBAKO,sBALP;AAAA;AAAA,MAKhBG,QALgB;AAAA,MAKNC,SALM;;AAOvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAe;AAC5BF,IAAAA,SAAS,CAACE,SAAD,CAAT;AACAX,IAAAA,KAAK,CAACY,YAAN,CAAmBD,SAAnB;AACH,GAHD;;AAKA,wBAAU,YAAM;AACZ,QAAIX,KAAK,CAACE,KAAV,EAAiB;AACbQ,MAAAA,QAAQ,CAACV,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeK,KAAhB,CAAR;AACH;AACJ,GAJD,EAIE,CAACP,KAAK,CAACE,KAAP,CAJF;AAMA,SACI,6BAAC,cAAD;AACI,IAAA,KAAK,EAAEW,MAAM,CAACC,SADlB;AAEI,IAAA,aAAa,EAAEN,QAFnB;AAGI,IAAA,aAAa,EAAE,uBAACG,SAAD,EAAYI,SAAZ;AAAA,aACXL,QAAQ,CAACC,SAAD,CADG;AAAA,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOQX,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAiB,6BAAC,cAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAED,IAAI,CAACE,KAAzB;AAAgC,MAAA,KAAK,EAAEF,IAAI,CAACG,KAA5C;AAAmD,MAAA,GAAG,EAAEF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAA,GAAhB,CAPvB,CADJ;AAYH,CA9BD;;eAiCeN,O;;;AAEf,IAAMc,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAC;AACNI,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADO,EAEP;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFO,CAFL;AAMNC,IAAAA,UAAU,EAAE;AANN;AADmB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {StyleSheet} from 'react-native';\nimport {Picker} from '@react-native-community/picker';\n\nconst MPicker = (props) => {\n\n\n    const rows = props.items && props.items.map((item, index) => <Picker.Item label={item.label} value={item.value} key={index}/>);\n\n    const [selected, setOption] = useState();\n    \n    const setWhich = (itemValue) => {\n        setOption(itemValue);\n        props.onSelectItem(itemValue);\n    }\n\n    useEffect(() => {\n        if (props.items) {\n            setWhich(props.items[0].value)\n        }\n    },[props.items]);\n    \n    return(\n        <Picker\n            style={styles.fullwidth}\n            selectedValue={selected}\n            onValueChange={(itemValue, itemIndex) =>\n                setWhich(itemValue)\n            }>\n            {\n                props.items && props.items.map((item, index) => <Picker.Item label={item.label} value={item.value} key={index}/>)\n            }\n        </Picker>\n    );    \n};\n\n\nexport default MPicker;\n\nconst styles = StyleSheet.create({\n    fullwidth:{\n        width: '78%',\n        transform: [\n            { scaleX: 1.4 },\n            { scaleY: 1.4 },\n        ],\n        marginLeft: '13%',\n        \n    }\n    \n});"]},"metadata":{},"sourceType":"script"}